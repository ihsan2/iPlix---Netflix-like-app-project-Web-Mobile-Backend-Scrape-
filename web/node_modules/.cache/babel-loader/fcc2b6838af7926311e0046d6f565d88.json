{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/auth/components/loginForm.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n        float: right;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    color: white;\\n    cursor: pointer;\\n    background-color: #e50914;\\n    line-height: normal;\\n    margin: 18px 3% 0 0;\\n    padding: 7px 17px;\\n    font-weight: 100;\\n    border: transparent;\\n    border-radius: 3px;\\n    font-size: 16px;\\n    text-decoration: one;\\n    width: 100%;\\n\\n    \", \"\\n    &:hover {\\n        background-color: #E53935;\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormControl } from \"react-bootstrap\";\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nvar required = function required(value) {\n  return value ? undefined : 'Required!';\n};\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning;\n  return React.createElement(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, touched && error && React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, error), React.createElement(FormControl, Object.assign({}, input, {\n    placeholder: label,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nvar Button = styled.button(_templateObject(), function (props) {\n  return props.right && css(_templateObject2());\n});\n\nvar LoginForm = function LoginForm(props) {\n  var handleSubmit = props.handleSubmit,\n      submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: 50,\n      marginBottom: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderField,\n    label: \"Username\",\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: renderField,\n    label: \"Password\",\n    validate: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    disabled: submitting,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(\"p\", {\n    style: {\n      marginTop: 5,\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"New to iPlix? \", React.createElement(Link, {\n    className: \"hoverLink\",\n    to: \"/register\",\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign up now\"), \".\"));\n};\n\nexport default reduxForm({\n  form: 'LoginForm' // a unique identifier for this form\n\n})(LoginForm);","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/auth/components/loginForm.js"],"names":["React","Field","reduxForm","FormControl","styled","css","Link","required","value","undefined","renderField","input","label","type","meta","touched","error","warning","marginBottom","fontWeight","color","Button","button","props","right","LoginForm","handleSubmit","submitting","marginTop","textAlign","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { FormControl } from \"react-bootstrap\";\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst required = value => value ? undefined : 'Required!'\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div style={{ marginBottom: 10 }}>\n            {touched && ((error && <span style={{ fontWeight: \"bold\", color: \"red\" }}>{error}</span>))}\n            <FormControl {...input} placeholder={label} type={type} />\n    </div>\n)\n\nconst Button = styled.button`\n    color: white;\n    cursor: pointer;\n    background-color: #e50914;\n    line-height: normal;\n    margin: 18px 3% 0 0;\n    padding: 7px 17px;\n    font-weight: 100;\n    border: transparent;\n    border-radius: 3px;\n    font-size: 16px;\n    text-decoration: one;\n    width: 100%;\n\n    ${props => props.right && css`\n        float: right;\n    `}\n    &:hover {\n        background-color: #E53935;\n    }\n`;\n\nconst LoginForm = (props) => {\n    const { handleSubmit, submitting } = props\n    return (\n        <form onSubmit={handleSubmit} style={{ marginTop: 50, marginBottom: 50 }}>\n            <Field name=\"username\" type=\"text\"\n                component={renderField} label=\"Username\"\n                validate={required}\n            />\n            <Field name=\"password\" type=\"password\"\n                component={renderField} label=\"Password\"\n                validate={required}\n            />\n            <div style={{ marginTop: 10 }}>\n                <Button type=\"submit\" disabled={submitting} color=\"primary\" >Sign In</Button>\n            </div>\n            <p style={{ marginTop: 5, textAlign: \"center\" }}>New to iPlix? <Link className=\"hoverLink\" to=\"/register\" style={{ fontWeight: \"bold\" }}>Sign up now</Link>.</p>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'LoginForm' // a unique identifier for this form\n})(LoginForm)"]},"metadata":{},"sourceType":"module"}