{"ast":null,"code":"import _toConsumableArray from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Container, Button, CardGroup } from 'reactstrap';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n    _this.fetchMore = _this.fetchMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      movies: [],\n      page: 1,\n      lastPage: 0,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMovies(1);\n    }\n  }, {\n    key: \"fetchMore\",\n    value: function fetchMore() {\n      var nextPage = this.state.page + 1;\n      this.getMovies(nextPage);\n    }\n  }, {\n    key: \"getMovies\",\n    value: function getMovies(number) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      var values = queryString.parse(this.props.location.search);\n\n      if (this.state.movies === undefined || this.state.movies.length == 0) {\n        axios.get(\"http://iplix.herokuapp.com/movies?search=\" + values.search + \"&page=\" + number).then(function (res) {\n          // console.log(res.data);\n          _this2.setState({\n            lastPage: res.data.lastPage,\n            page: number\n          });\n\n          _this2.setState({\n            movies: res.data.data,\n            loading: false\n          });\n        }).catch(function (err) {\n          alert(\"Connection to server error, please try again!\");\n\n          _this2.setState({\n            loading: false\n          });\n        });\n      } else {\n        axios.get(\"http://iplix.herokuapp.com/movies?search=\" + values.search + \"&page=\" + number).then(function (res) {\n          var pushMovie = [].concat(_toConsumableArray(_this2.state.movies), _toConsumableArray(res.data.data)); // console.log(pushMovie);\n\n          _this2.setState({\n            lastPage: res.data.lastPage,\n            page: number\n          });\n\n          _this2.setState({\n            movies: pushMovie,\n            loading: false\n          });\n        }).catch(function (err) {\n          alert(\"Connection to server error, please try again!\");\n\n          _this2.setState({\n            loading: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = queryString.parse(this.props.location.search);\n      return React.createElement(\"section\", {\n        id: \"semua\",\n        style: {\n          marginTop: 90,\n          marginBottom: \"5vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, values.search === '' ? React.createElement(\"div\", {\n        className: \"row p-3\",\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        style: {\n          fontSize: 30,\n          fontWeight: 600,\n          lineHeight: 1.4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Please enter keyword!\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row p-3\",\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-left\",\n        style: {\n          fontSize: 30,\n          fontWeight: 600,\n          lineHeight: 1.4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Search for: \", values.search, \" \"))), this.state.loading === true ? React.createElement(LoadingOverlay, {\n        active: this.state.loading,\n        spinner: true,\n        text: \"Loading...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : this.state.lastPage === 0 ? React.createElement(\"div\", {\n        className: \"row p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"No movies found!\"))) : React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.movies.map(function (data) {\n        return React.createElement(\"div\", {\n          key: data.id,\n          className: \"Item\",\n          style: {\n            backgroundImage: 'url(' + data.thumbnails + ')'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/movie/' + data.slug,\n            state: data\n          },\n          data: data,\n          style: {\n            color: \"white\",\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"title\",\n          style: {\n            lineHeight: 1.2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')), React.createElement(\"div\", {\n          className: \"rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, data.rating ? data.rating.substr(0, 3) + ' / 10' : 'no rating'), React.createElement(\"div\", {\n          className: \"plot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, data.description.substr(0, 100) + '..'))));\n      }))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        align: \"center\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.page === this.state.lastPage || this.state.lastPage === 0 || this.state.lastPage === 1 ? React.createElement(Button, {\n        color: \"secondary\",\n        size: \"large\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Load More\") : React.createElement(Button, {\n        onClick: this.fetchMore,\n        color: \"danger\",\n        size: \"large\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Load More\")))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/search.js"],"names":["React","Component","Link","queryString","axios","LoadingOverlay","Container","Button","CardGroup","Search","props","fetchMore","bind","state","movies","page","lastPage","loading","getMovies","nextPage","number","setState","values","parse","location","search","undefined","length","get","then","res","data","catch","err","alert","pushMovie","marginTop","marginBottom","padding","fontSize","fontWeight","lineHeight","map","id","backgroundImage","thumbnails","pathname","slug","color","textDecoration","title","replace","rating","substr","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport { Container, Button, CardGroup } from 'reactstrap'\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.fetchMore = this.fetchMore.bind(this);\n        this.state = {\n            movies: [],\n            page: 1,\n            lastPage: 0,\n            loading: false\n        };\n    }\n\n    componentDidMount() {\n        this.getMovies(1)\n    }\n\n    fetchMore() {\n        const nextPage = this.state.page + 1;\n        this.getMovies(nextPage);\n    }\n\n    getMovies(number) {\n        this.setState({ loading: true });\n        const values = queryString.parse(this.props.location.search);\n        if (this.state.movies === undefined || this.state.movies.length == 0) {\n            axios.get(\"http://iplix.herokuapp.com/movies?search=\" + values.search + \"&page=\" + number)\n                .then(res => {\n                    // console.log(res.data);\n                    this.setState({ lastPage: res.data.lastPage, page: number });\n                    this.setState({ movies: res.data.data, loading: false });\n                })\n                .catch(err => {\n                    alert(\"Connection to server error, please try again!\");\n                    this.setState({ loading: false })\n                })\n        } else {\n            axios.get(\"http://iplix.herokuapp.com/movies?search=\" + values.search + \"&page=\" + number)\n                .then(res => {\n                    const pushMovie = [...this.state.movies, ...res.data.data];\n                    // console.log(pushMovie);\n                    this.setState({ lastPage: res.data.lastPage, page: number });\n                    this.setState({ movies: pushMovie, loading: false });\n                })\n                .catch(err => {\n                    alert(\"Connection to server error, please try again!\");\n                    this.setState({ loading: false })\n                })\n        }\n\n    }\n\n    render() {\n        const values = queryString.parse(this.props.location.search)\n        return (\n            <section id=\"semua\" style={{ marginTop: 90, marginBottom: \"5vh\" }}>\n                <Container>\n                    {values.search === '' ?\n                        <div className=\"row p-3\" style={{ padding: 0 }}>\n                            <div className=\"col-md-12\" style={{ padding: 0 }}>\n                                <h2 className=\"text-center\"\n                                    style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4 }}>Please enter keyword!</h2>\n                            </div>\n                        </div>\n                        : (\n                            <div>\n                                <div className=\"row p-3\" style={{ padding: 0 }}>\n                                    <div className=\"col-md-12\" style={{ padding: 0 }}>\n                                        <h2 className=\"text-left\"\n                                            style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4 }}>Search for: {values.search} </h2>\n                                    </div>\n                                </div>\n                                {this.state.loading === true ? <LoadingOverlay\n                                    active={this.state.loading}\n                                    spinner\n                                    text='Loading...'\n                                /> :\n                                    this.state.lastPage === 0 ?\n                                        <div className=\"row p-3\">\n                                            <div className=\"col-md-12\">\n                                                <h2 className=\"text-left\">No movies found!</h2>\n                                            </div>\n                                        </div>\n                                        :\n                                        <CardGroup>\n                                            <div className=\"row\" style={{ marginBottom: 10 }}>\n                                                {\n                                                    this.state.movies.map(data =>\n                                                        <div key={data.id} className=\"Item\" style={{ backgroundImage: 'url(' + data.thumbnails + ')' }} >\n                                                            <Link to={{ pathname: '/movie/' + data.slug, state: data }} data={data} style={{ color: \"white\", textDecoration: \"none\" }}>\n                                                                <div className=\"overlay\">\n                                                                    <div className=\"title\" style={{ lineHeight: 1.2 }}>{data.title.replace(/(^\\Nonton +|\\ Subtitle Indonesia+$)/mg, '')}</div>\n                                                                    <div className=\"rating\">\n                                                                        {data.rating ?\n                                                                            data.rating.substr(0, 3) + ' / 10'\n                                                                            : 'no rating'\n                                                                        }\n                                                                    </div>\n                                                                    <div className=\"plot\">{data.description.substr(0, 100) + '..'}</div>\n                                                                </div>\n                                                            </Link>\n                                                        </div>\n                                                    )\n                                                }\n                                            </div>\n                                        </CardGroup>\n                                }\n                                <div className=\"col-md-12\" align=\"center\" style={{ marginBottom: 20 }}>\n                                    {this.state.page === this.state.lastPage || this.state.lastPage === 0 || this.state.lastPage === 1 ?\n                                        <Button color=\"secondary\" size=\"large\" target=\"_blank\" >Load More</Button>\n                                        :\n                                        <Button onClick={this.fetchMore} color=\"danger\" size=\"large\" target=\"_blank\">\n                                            Load More</Button>\n                                    }\n                                </div>\n                            </div>\n                        )\n                    }\n                </Container>\n            </section>\n        );\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}