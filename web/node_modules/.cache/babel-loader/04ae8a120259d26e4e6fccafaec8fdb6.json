{"ast":null,"code":"import _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\nimport Iframe from 'react-iframe';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      movies: [],\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMoviesRelated(this.props.location.state.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location.state.id !== prevProps.location.state.id) {\n        // console.log('props change')\n        this.getMoviesRelated(this.props.location.state.id);\n      }\n    } // fetchMovie(id){\n    // }\n\n  }, {\n    key: \"getMoviesRelated\",\n    value: function getMoviesRelated(id) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      axios.get(process.env.REACT_APP_REST_IP + \"/movies/\" + id + \"/related\").then(function (res) {\n        // console.log(res.data);\n        // this.setState({ lastPage: res.data.lastPage, page: number });\n        _this2.setState({\n          movies: res.data.data,\n          loading: false\n        });\n      }).catch(function (err) {\n        alert(\"Connection to server error, please try again!\");\n\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if no movies\n      if (this.props.location.state === undefined) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }); // alert(\"owww\")\n      } // console.log(this.props)\n      // console.log(this.props.location.state.id)\n      // console.log(this.props.location.pathname.substr(7,)) //\"/movie/Nonton-\"\n\n\n      var data = this.props.location.state;\n      var genreSplit = data.genre.split(',').map(function (item, index) {\n        return (index ? ', ' : \"\") + item;\n      });\n      var directorsSplit = data.directors.split(',').map(function (item, index) {\n        return (index ? ', ' : \"\") + item;\n      });\n      var actorsSplit = data.actors.split(',').map(function (item, index) {\n        return (index ? ', ' : \"\") + item;\n      });\n      return (// <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n        React.createElement(Container, {\n          style: {\n            marginTop: 100,\n            marginBottom: \"5vh\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-12\",\n          align: \"center\",\n          style: {\n            marginBottom: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, data.embed_url ? React.createElement(Iframe, {\n          url: data.embed_url,\n          height: \"70vh\",\n          position: \"relative\",\n          id: \"myId\",\n          className: \"myClassname\",\n          width: \"100%\",\n          styles: {\n            maxHeight: \"800px\"\n          },\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }) : data.video_url ? React.createElement(Iframe, {\n          url: data.video_url,\n          height: \"70vh\",\n          position: \"relative\",\n          id: \"myId\",\n          className: \"myClassname\",\n          width: \"100%\",\n          styles: {\n            maxHeight: \"800px\"\n          },\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          className: \"myClassname align-middle\",\n          style: {\n            height: \"20vh\",\n            position: \"relative\",\n            width: \"100%\",\n            maxHeight: \"800px\",\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"align-middle\",\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Sorry, the movie doesn't exist yet, please come back later\"))), React.createElement(\"h2\", {\n          className: \"text-left\",\n          style: {\n            fontSize: 30,\n            fontWeight: 600,\n            lineHeight: 1.4,\n            textTransform: \"capitalize\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, data.title), React.createElement(\"hr\", {\n          style: {\n            borderTop: \"3px solid white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Col, {\n          style: {\n            marginTop: 10,\n            marginBottom: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, data.description))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: data.thumbnails,\n          alt: data.title,\n          style: {\n            width: \"100%\",\n            borderRadius: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: \"auto\",\n          style: {\n            maxWidth: \"75%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Rating: \", data.rating ? data.rating + ' / 10' : 'no rating', \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Duration: \", data.duration), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Release date: \", data.release), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Country: \", data.country), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Genre: \", genreSplit), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Directors: \", directorsSplit), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Actors: \", actorsSplit))), React.createElement(Row, {\n          style: {\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"text-left\",\n          style: {\n            fontSize: 20,\n            fontWeight: 600,\n            lineHeight: 1.4,\n            textTransform: \"capitalize\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Related\"))), React.createElement(\"hr\", {\n          style: {\n            borderTop: \"1px solid white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(CardGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          style: {\n            marginBottom: 30,\n            marginLeft: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, this.state.loading === true ? React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Loading...\") : this.state.movies.slice(0, 5).map(function (data) {\n          return React.createElement(\"div\", {\n            key: data.id,\n            className: \"Item\",\n            style: {\n              backgroundImage: 'url(' + data.thumbnails + ')',\n              height: 250,\n              width: 214\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: '/movie/' + data.slug,\n              state: data\n            },\n            data: data,\n            style: {\n              color: \"white\",\n              textDecoration: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"overlay\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"title\",\n            style: {\n              lineHeight: 1.2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, data.title), React.createElement(\"div\", {\n            className: \"rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, data.rating ? data.rating + ' / 10' : 'no rating'), React.createElement(\"div\", {\n            className: \"plot\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, data.description.substr(0, 150) + '..'))));\n        })))) // </div>\n\n      );\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/movie/screens/movie.js"],"names":["React","Component","Container","Row","Col","CardGroup","Iframe","Redirect","Link","axios","Movie","props","state","movies","loading","getMoviesRelated","location","id","prevProps","setState","get","process","env","REACT_APP_REST_IP","then","res","data","catch","err","alert","undefined","genreSplit","genre","split","map","item","index","directorsSplit","directors","actorsSplit","actors","marginTop","marginBottom","embed_url","maxHeight","video_url","height","position","width","fontSize","justifyContent","alignItems","fontWeight","lineHeight","textTransform","title","borderTop","description","thumbnails","borderRadius","maxWidth","rating","duration","release","country","marginLeft","slice","backgroundImage","pathname","slug","color","textDecoration","substr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, CardGroup } from 'reactstrap';\nimport Iframe from 'react-iframe'\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            loading: false\n        };\n    }\n\n    componentDidMount() {\n        this.getMoviesRelated(this.props.location.state.id)\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.location.state.id !== prevProps.location.state.id) {\n            // console.log('props change')\n            this.getMoviesRelated(this.props.location.state.id)\n        }\n    }\n\n    // fetchMovie(id){\n\n    // }\n\n    getMoviesRelated(id) {\n        this.setState({ loading: true });\n        axios.get(process.env.REACT_APP_REST_IP + \"/movies/\" + id + \"/related\")\n            .then(res => {\n                // console.log(res.data);\n                // this.setState({ lastPage: res.data.lastPage, page: number });\n                this.setState({ movies: res.data.data, loading: false });\n            })\n            .catch(err => {\n                alert(\"Connection to server error, please try again!\");\n                this.setState({ loading: false })\n            })\n    }\n\n    render() {\n        // if no movies\n        if (this.props.location.state === undefined) {\n            return <Redirect to=\"/\" />\n            // alert(\"owww\")\n        }\n\n        // console.log(this.props)\n        // console.log(this.props.location.state.id)\n        // console.log(this.props.location.pathname.substr(7,)) //\"/movie/Nonton-\"\n\n        const data = this.props.location.state;\n        const genreSplit = data.genre.split(',').map((item, index) => {\n            return (index ? ', ' : \"\") + item\n        });\n        const directorsSplit = data.directors.split(',').map((item, index) => {\n            return (index ? ', ' : \"\") + item\n        });\n        const actorsSplit = data.actors.split(',').map((item, index) => {\n            return (index ? ', ' : \"\") + item\n        });\n\n        return (\n            // <div style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n            <Container style={{ marginTop: 100, marginBottom: \"5vh\" }}>\n                <div className=\"col-md-12\" align=\"center\" style={{ marginBottom: 20 }}>\n\n                    {\n                        data.embed_url ?\n                            <Iframe url={data.embed_url}\n                                height=\"70vh\"\n                                position=\"relative\"\n                                id=\"myId\"\n                                className=\"myClassname\"\n                                width=\"100%\"\n                                styles={{ maxHeight: \"800px\" }}\n                                allowFullScreen />\n                            :\n                            data.video_url ?\n                                <Iframe url={data.video_url}\n                                    height=\"70vh\"\n                                    position=\"relative\"\n                                    id=\"myId\"\n                                    className=\"myClassname\"\n                                    width=\"100%\"\n                                    styles={{ maxHeight: \"800px\" }}\n                                    allowFullScreen />\n                                    : \n                                    <div className=\"myClassname align-middle\" \n                                    style={{ height: \"20vh\", position: \"relative\", width: \"100%\", maxHeight: \"800px\", fontSize: 30 }}>\n                                    <span className=\"align-middle\" style={{ justifyContent: \"center\", alignItems: \"center\" }}>Sorry, the movie doesn't exist yet, please come back later</span>\n                                    </div>\n                    }\n                </div>\n                <h2 className=\"text-left\" style={{ fontSize: 30, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>{data.title}</h2>\n                <hr style={{ borderTop: \"3px solid white\" }} />\n                <Row>\n                    <Col style={{ marginTop: 10, marginBottom: 20 }}>\n                        <p>{data.description}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"3\" >\n                        <img src={data.thumbnails} alt={data.title} style={{ width: \"100%\", borderRadius: 5 }} />\n                    </Col>\n                    <Col xs=\"auto\" style={{ maxWidth: \"75%\" }}>\n                        <p>Rating: {data.rating ? data.rating + ' / 10' : 'no rating'} </p>\n                        <p>Duration: {data.duration}</p>\n                        <p>Release date: {data.release}</p>\n                        <p>Country: {data.country}</p>\n                        <p>Genre: {genreSplit}</p>\n                        <p>Directors: {directorsSplit}</p>\n                        <p>Actors: {actorsSplit}</p>\n                    </Col>\n                </Row>\n\n                <Row style={{ marginTop: 30 }}>\n                    <Col>\n                        <h2 className=\"text-left\" style={{ fontSize: 20, fontWeight: 600, lineHeight: 1.4, textTransform: \"capitalize\" }}>Related</h2>\n                    </Col>\n                </Row>\n                <hr style={{ borderTop: \"1px solid white\" }} />\n                <CardGroup>\n                    <div className=\"row\" style={{ marginBottom: 30, marginLeft: 0 }}>\n                        {this.state.loading === true ? <div className=\"text-center\">Loading...</div> :\n                            this.state.movies.slice(0, 5).map(data =>\n                                <div key={data.id} className=\"Item\" style={{ backgroundImage: 'url(' + data.thumbnails + ')', height: 250, width: 214 }} >\n                                    <Link to={{ pathname: '/movie/' + data.slug, state: data }} data={data} style={{ color: \"white\", textDecoration: \"none\" }}>\n                                        <div className=\"overlay\">\n                                            <div className=\"title\" style={{ lineHeight: 1.2 }}>{data.title}</div>\n                                            <div className=\"rating\">\n                                                {data.rating ?\n                                                    data.rating + ' / 10'\n                                                    : 'no rating'\n                                                }\n                                            </div>\n                                            <div className=\"plot\">{data.description.substr(0, 150) + '..'}</div>\n                                        </div>\n                                    </Link>\n                                </div>\n                            )\n                        }\n                    </div>\n                </CardGroup>\n            </Container>\n            // </div>\n        );\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}