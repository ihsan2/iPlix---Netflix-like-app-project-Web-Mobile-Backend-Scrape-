{"ast":null,"code":"import _objectSpread from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  token: [],\n  user: [],\n  isLoading: false,\n  isFinish: false,\n  isError: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // case login\n    case \"LOGIN_PENDING\":\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case \"LOGIN_FULFILLED\":\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isFinish: true,\n        token: [action.payload.data.token.token],\n        user: [action.payload.data.user]\n      });\n\n    case \"LOGIN_REJECTED\":\n      return _objectSpread({}, state, {\n        isError: true,\n        isLoading: false // case logout\n\n      });\n\n    case \"LOGOUT\":\n      return _objectSpread({}, state, {\n        token: [],\n        user: [] // case register\n\n      });\n\n    case \"REGISTER_PENDING\":\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case \"REGISTER_FULFILLED\":\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isFinish: true,\n        token: [action.payload.data.token.token],\n        user: [action.payload.data.user]\n      });\n\n    case \"REGISTER_REJECTED\":\n      return _objectSpread({}, state, {\n        isError: true,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/public/redux/reducers/auth.js"],"names":["initialState","token","user","isLoading","isFinish","isError","state","action","type","payload","data"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,QAAQ,EAAE,KAJO;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;AASA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,eAAL;AACI,+BACOF,KADP;AACcH,QAAAA,SAAS,EAAE;AADzB;;AAIJ,SAAK,iBAAL;AACI,+BACOG,KADP;AAEIH,QAAAA,SAAS,EAAE,KAFf;AAEsBC,QAAAA,QAAQ,EAAE,IAFhC;AAGIH,QAAAA,KAAK,EAAE,CAACM,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBT,KAApB,CAA0BA,KAA3B,CAHX;AAIIC,QAAAA,IAAI,EAAE,CAACK,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBR,IAArB;AAJV;;AAOJ,SAAK,gBAAL;AACI,+BACOI,KADP;AACcD,QAAAA,OAAO,EAAE,IADvB;AAC6BF,QAAAA,SAAS,EAAE,KADxC,CAKJ;;AALI;;AAMJ,SAAK,QAAL;AACI,+BACOG,KADP;AAEIL,QAAAA,KAAK,EAAE,EAFX;AAEeC,QAAAA,IAAI,EAAE,EAFrB,CAMJ;;AANI;;AAOJ,SAAK,kBAAL;AACI,+BACOI,KADP;AACcH,QAAAA,SAAS,EAAE;AADzB;;AAIJ,SAAK,oBAAL;AACI,+BACOG,KADP;AAEIH,QAAAA,SAAS,EAAE,KAFf;AAEsBC,QAAAA,QAAQ,EAAE,IAFhC;AAGIH,QAAAA,KAAK,EAAE,CAACM,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBT,KAApB,CAA0BA,KAA3B,CAHX;AAIIC,QAAAA,IAAI,EAAE,CAACK,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBR,IAArB;AAJV;;AAOJ,SAAK,mBAAL;AACI,+BACOI,KADP;AACcD,QAAAA,OAAO,EAAE,IADvB;AAC6BF,QAAAA,SAAS,EAAE;AADxC;;AAIJ;AACI,aAAOG,KAAP;AAjDR;AAmDH,CApDD","sourcesContent":["const initialState = {\n    token: [],\n    user: [],\n    isLoading: false,\n    isFinish: false,\n    isError: false\n}\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        // case login\n        case \"LOGIN_PENDING\":\n            return {\n                ...state, isLoading: true\n            }\n\n        case \"LOGIN_FULFILLED\":\n            return {\n                ...state,\n                isLoading: false, isFinish: true,\n                token: [action.payload.data.token.token],\n                user: [action.payload.data.user]\n            }\n\n        case \"LOGIN_REJECTED\":\n            return {\n                ...state, isError: true, isLoading: false\n\n            }\n\n        // case logout\n        case \"LOGOUT\":\n            return {\n                ...state,\n                token: [], user: []\n            }\n\n\n        // case register\n        case \"REGISTER_PENDING\":\n            return {\n                ...state, isLoading: true\n            }\n\n        case \"REGISTER_FULFILLED\":\n            return {\n                ...state,\n                isLoading: false, isFinish: true,\n                token: [action.payload.data.token.token],\n                user: [action.payload.data.user]\n            }\n\n        case \"REGISTER_REJECTED\":\n            return {\n                ...state, isError: true, isLoading: false\n\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}