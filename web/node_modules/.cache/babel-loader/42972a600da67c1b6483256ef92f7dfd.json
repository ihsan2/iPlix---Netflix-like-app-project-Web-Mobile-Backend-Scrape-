{"ast":null,"code":"import _classCallCheck from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/public/components/NavBar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from 'reactstrap'; // import Header from './NavBar/Index';\n\nimport Logo from './NavBar/Logo';\nimport Navigation from './NavBar/Navigation';\nimport Search from './NavBar/Search';\nimport UserProfile from './NavBar/UserProfile';\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar(props) {\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NavBar).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isOpen: false,\n      toHome: false,\n      search: '',\n      toSearch: false\n    };\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if(this.props.location.pathname === \"/login\" || this.props.location.pathname === \"/register\"){\n      //     return null\n      // }\n      if (this.state.toHome === true) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.toSearch === true) {\n        // const route = '/movies?search=' + this.state.search;\n        return React.createElement(Redirect, {\n          to: \"/movies?search=\" + this.state.search,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        expand: \"md\",\n        className: \"Header navbar-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        className: \"mr-2\",\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(UserProfile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nvar mapsStateToProps = function mapsStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default withRouter(connect(mapsStateToProps, null)(NavBar));","map":{"version":3,"sources":["/home/sumirart/NETFLIXCLONE-NEW/Boilerplate-Iflix-Web-Clone-With-React/src/public/components/NavBar.js"],"names":["React","Component","withRouter","Redirect","connect","Collapse","Navbar","NavbarToggler","Nav","NavItem","Logo","Navigation","Search","UserProfile","NavBar","props","toggle","bind","state","isOpen","toHome","search","toSearch","setState","float","mapsStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    NavItem\n} from 'reactstrap';\n\n\n// import Header from './NavBar/Index';\nimport Logo from './NavBar/Logo';\nimport Navigation from './NavBar/Navigation';\nimport Search from './NavBar/Search';\nimport UserProfile from './NavBar/UserProfile';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n            toHome: false,\n            search: '',\n            toSearch: false,\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        // if(this.props.location.pathname === \"/login\" || this.props.location.pathname === \"/register\"){\n        //     return null\n        // }\n\n        if (this.state.toHome === true) {\n            return <Redirect to=\"/\" />\n        }\n\n        if (this.state.toSearch === true) {\n            // const route = '/movies?search=' + this.state.search;\n            return <Redirect to={`/movies?search=` + this.state.search} />\n        }\n\n        return (\n            <div>\n                <Navbar expand=\"md\" className=\"Header navbar-dark\">\n\n                    <Logo />\n                    <NavbarToggler onClick={this.toggle} className='mr-2' style={{ float: \"right\" }}>\n                        <span className='navbar-toggler-icon'></span>\n                    </NavbarToggler>\n\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Navigation />\n                            </li>\n                            <li className=\"nav-item\">\n                                <Search />\n                            </li>\n                        </ul>\n                        <Nav className=\"ml-auto\" navbar>\n                            <UserProfile />\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n                \n                    {/* <NavbarBrand href=\"/\">reactstrap</NavbarBrand> */}\n                {/* <Navbar className=\"Header navbar-dark\" expand=\"md\">\n                    <Logo />\n                    <NavbarToggler onClick={this.toggle} style={{ float: \"right\" }} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"mr-auto\" navbar>\n                            <NavItem>\n                                <Navigation />\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Search />\n                            </NavItem>\n                            <NavItem>\n                                <UserProfile />\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar> */}\n            </div>\n        );\n    }\n}\n\nconst mapsStateToProps = (state) => ({\n    auth: state.auth\n})\n\nexport default withRouter(connect(mapsStateToProps, null)(NavBar));"]},"metadata":{},"sourceType":"module"}